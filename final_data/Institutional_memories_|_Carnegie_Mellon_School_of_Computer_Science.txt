The Link

The magazine of Carnegie Mellon University's School of Computer Science

Its name recognizes the pioneering work of two of the School of Computer Science's co-founders, Allen Newell and Herb Simon, who invented the use of linked-list data structures for representing complex information.

But it also serves as the link between the School of Computer Science and more than 10,000 alumni, colleagues, parents and other friends around the world.

Institutional memories

Reflections on a quarter-century (and more)

By Jason Togyer

The School of Computer Science is celebrating its 25th year as a stand-alone college within CMU. We asked some of the people involved with that milestone to tell us the story in their own words—and to predict what comes next.

The computer science era at Carnegie Tech began in 1956, with the arrival of the university’s first computer, an IBM 650 with magnetic-drum memory and a speed of approximately 60 instructions per second. Herb Simon (H’90), associate dean of the Graduate School of Industrial Administration—now known as the Tepper School of Business—established Tech’s first Computation Center with the help of its first director, Alan Perlis (S’42).

JIM MORRIS , S’63 (Professor of Computer Science): Simon, in retrospect, remade the university starting in about 1950. I think of him as the intellectual founder of our current university, because he brought in Allen Newell from the RAND Corporation, and he recruited Alan Perlis. That was the famous three-some that arguably created computer science nationally.

ALLEN NEWELL , IA’57 (U.A. and Helen Whitaker professor of computer science, interviewed in 1991): Computing comes to CMU, a highly technical college, and it comes to GSIA. They are the people who embraced it, mostly because the characters at the other end of the campus didn’t have the good sense to decide that they wanted the computer down in their environment.

MORRIS : Schools such as Harvard and Penn and some places in England had an engineering jump in computer science, but Simon was a social scientist. Simon came out of an operations research tradition during the second World War, when they were thinking of computers much more as a tool than as a thing to be “built.” He and Newell pushed a much broader perception of what computer science was going to be, and it was more about using computers than building them.

NEWELL (1991): The whole early part of this thing at GSIA (was) loaded with concern for management science. No concern with numerical computing; total concern with sort of non-numerical stuff … concern with human behavior was very much involved.

MORRIS : Simon said, “Look, this computer thing is going to be big, and it’s going to be used for a lot more than just numerical calculations. It’s going to be used for everything, and it’s going to remake corporations.” In that way, they got the whole university—GSIA, psychology, humanities, social sciences—energized about computers.

In 1956 and 1957, Simon, Newell and Cliff Shaw of RAND designed the Logic Theorist, a computer program that could discover proofs for theorems. They also developed linked-list data structures, the foundation of computer programming. In 1958, Perlis began teaching the first freshman-level computer programming course in the United States at Carnegie Tech.

MORRIS : I was sitting in the fraternity house, having a beer, and a friend walked in and said, “I’m taking a course with this crazy bald-headed guy. It’s a night course, but he says anyone who wants an ‘A’ can get an ‘A.’” I said, “Well! That sounds like a very interesting subject to me!” (Laughs.) It was Alan Perlis, who was evangelizing computing at a very early stage. It was an exciting set of ideas, and I was sitting here as an undergraduate, having no clue that I was part of a revolution.

In 1961, the Computation Center and its then-new Bendix G-20 were moved to recently completed Scaife Hall. That same year, Carnegie Tech created an interdisciplinary Ph.D. program called Systems and Communications Sciences, combining elements of computer science, mathematics, psychology, business and electrical engineering. The university’s first computer science Ph.D.s were graduates of this program.

NEWELL (1991): It had its own graduate students, probably about 15. They all lived in the Computation Center, and it was fueled by DARPA funds, independently of anything else. From my point of view, DARPA never had any plans for us. We were just supposed to go be “excellent.”

MORRIS : In the 1960s, a guy at DARPA named J.C.R. Licklider said “I’m going to create computer science departments, and I’m basically going to do it by spending a lot of money.” His chosen method of doing that was to call up his friends at MIT, Carnegie Tech and Stanford, give them money, and say, “Go do computer science.”

NEWELL (interviewed in 1985): You have to know something about the 1960s. In the 1960s, the norm was to get money. I didn’t say the norm was to entrepreneur it—the norm was to get it … Everything (at DARPA) was oriented toward providing scientists with funds. And the same thing was true at NIH.

MORRIS : This was happening in universities all over the country. The Defense Department and the National Science Foundation were force-feeding money into universities, and Carnegie Tech got itself right in there.

The department emerges

In 1965, Carnegie Tech established its Computer Science Department with a $5 million grant from the R.K. Mellon Foundation. Perlis was the first department head.

MARY SHAW , CS’72 (Alan J. Perlis University Professor of Computer Science): 1965 is the beginning of time as we know it. I graduated from Rice, and not too long after I was admitted to the (Carnegie Tech) interdisciplinary program, the (CS) department was formed. The whole enterprise was small—probably a half-dozen faculty.

NEWELL (1991): I don’t think I even knew that we became a department. I never attended a single meeting to discuss it. Al (Perlis) and I talked about it a couple of times. We agreed it was sort of the right thing to do. Al went off and did it.

ANGEL JORDAN , S’52, E’59 (Emeritus University Professor of Electrical & Computer Engineering and Robotics): It was only Ph.D.s—no master’s students, no undergraduates, and it was supposed to have a heavy dose of research, research, research.

In 1967, Carnegie Institute of Technology merged with the nearby Mellon Institute of Industrial Research to form Carnegie-Mellon University. The Department of Computer Science moved into the newly created Mellon Institute of Science, later renamed Mellon College of Science, or MCS.

SHAW : The curriculum at that time was, “take courses for two years and then look for a research advisor.” The class that entered in 1968 essentially staged a palace revolution. They said, “This is not what we came to graduate school for—this is more like an undergraduate program.” And Al Perlis, to his great credit, said, “Well, let’s try it another way.”

NEWELL (1985): The whole structure of our program was set in 1969 because we had this student revolt. Now, there you (have) what has got to be, historically, an atypical response. Faculties do not normally respond to that.

SHAW : The critical path to the degree is the student figuring out how to do research, and what we know about critical path analysis says that you want to get started on the critical path as early as possible. That’s one of the insights that led to the curriculum change, and we haven’t lost sight of it. We still match up students with research advisors, essentially as soon as they arrive, and we expect them to be doing research right away.

NEWELL (1991): We ended up with a place where graduate students picked people to work with without concern for whether they get funded totally and completely … All you had were people doing science. Not little fiefdoms. It was all community. All because there weren’t any financial constraints on people.

SHAW : We were over in Porter Hall then—I believe we had both floors of what was then the “new” addition, and part of where Civil Engineering is now. The Computation Center and the department were very much one entity—the Computation Center staff were contemporaries of the students, and the offices were intermingled. Most of us were single. Someone would go down the hall and say, “It’s dinner time, who’s coming?” and a mix of students and staff would go out.

DAN SIEWIOREK (Buhl University Professor of Electrical and Computer Engineering and Computer Science): I joined the faculty in 1972. When I was a graduate student at Stanford, word was that at CMU, collaboration was in the water, in the air. You could get world-class people to collaborate on something that was in their area of expertise and get something greater than the sum of the parts.

In the 1960s, Jordan was a professor of electrical engineering at CMU. He became head of the Electrical Engineering Department in 1969.

JORDAN : Alan Perlis eventually went to Yale, but prior to leaving, he came up with the idea that since the Department of Computer Science was so small, and wanted to grow, while the Electrical Engineering Department was large, and not particularly interested in growing, that we would create joint appointments—associate or assistant professors of both electrical engineering and computer science. It was a very good idea—in fact, a stroke of genius—because poor Computer Science, with only seven or eight faculty members, was able to grow, and grow significantly. A number of great people came—Bill Wulf (H’99), for instance, was one of our early luminaries, along with Gordon Bell (H’10).

Raj Reddy joined the CSD in 1969 after three years as an assistant professor at Stanford. He brought with him research in speech, language and computer vision. But in 1970 and 1971, the new Computer Science Department faced its first crisis, as half of its tenured faculty members—including Perlis—left for other universities. Joe Traub was recruited from Bell Labs to CMU to become the new department head.

JOE TRAUB (Edwin Howard Armstrong Professor of Computer Science, Columbia University): The department was still a jewel even though half of the faculty had left, and my number one priority was, “Got to hire some great faculty.” I invited 30 people here that first year. At one point, Raj Reddy came to me and said, “You’re wearing out the faculty,” because we were interviewing sometimes four or five people in one week ... one of the people we hired that first year was Dan Sieworiek.

SIEWIOREK : When I got here, I was one of those 50/50 appointments in CS and EE. It was an attempt to get the departments to work closer together. We had, I think, 10 faculty members, and there was a great degree of cooperation. John Grason (E’65, CS’70), along with Gordon Bell, developed something called PDP-16 register transfer modules. Those allowed a junior-level class to build a PDP-8 class minicomputer in one or two labs, which was really unheard of at the time. Things were very exciting here.

TRAUB : They were working on some very sexy stuff here with parallel processing, for instance. And even though they had lost some faculty members, Allen Newell and Herb Simon were still here, and they were giants. Some people have big reputations when you look at them from afar, but Allen Newell—what you saw from afar was what you got up close … And I didn’t have a fear about (office) space, because Science Hall (now Wean Hall) was brand new. The first thing I did was get us moved out of the old offices into Science Hall in July of ’71.

Shaw organized and led CSD’s first Immigration Course that fall while finishing her doctoral thesis.

SHAW : I remember getting permission to take some classroom chairs from somewhere over in Porter Hall so that we could have seats for the first day of classes in the new building. I rounded up some other students and a dolly, and we went and moved chairs one evening, because it was easier than getting it done by official means.

TRAUB : The thing about Carnegie that was so different from other universities was that it was so easy to get things done—to make joint appointments, for instance … I like to build things—I build institutions and I build theories. But I like to build new things so that I don’t have to follow someone else’s rules.

SHAW : I joined the faculty when I graduated in 1972. There was work on programming language design, better ways to build compilers and operating systems research. AI was concerned with problem solving and chess, things like that. We had four faculty members interested in “programming languages,” which is what software people were called at the time.

JORDAN : Our DARPA funding started to be significantly augmented with the help of Allen Newell and Raj Reddy. As Raj and others became prominent in the Department of Computer Science, they also had tremendous influence in other departments, such as Psychology, and later had influence elsewhere, such as the College of Fine Arts. It became quite interdisciplinary.

TRAUB : My total budget for the department was very simple. It totaled $2 million—in 1971 dollars—$1.8 million from DARPA and $200,000 from CMU. Having 90 percent of the budget come from one source made me very nervous. We worked hard to diversify and increase our external funding by some $1 million, a good part of that coming from NSF.

‘Greening up the campus with computer science’

Several large projects emerged in the Computer Science Department, including C.mmp, the first shared-memory multiprocessor computer, with 16 processing units. Siewiorek was co-lead on the construction of Cm*, a 50-processor computer. In 1975, Simon and Newell were awarded the A.M. Turing Award for their work in artificial intelligence. Three years later, Simon received the Nobel Prize in Economics for decision-making theory.

Although Newell continued pursuing AI systems that emulated human thinking, he also became interested in human-computer interaction, and began a long relationship with Xerox’s Palo Alto Research Center, or PARC, which released the Xerox Alto in 1973. Considered a forerunner to many of the computing environments that followed, Alto featured a graphical-user interface and was among the first commercially available workstations controlled with a mouse.

NEWELL (1991): There never was a scientific publication issued on the Alto, but the Alto, in fact, was a very important thing for computer science.

RAJ REDDY (Moza Bint Nasser University Professor of Computer Science and Robotics): Newell and I used to consult for Xerox PARC, so both of us were somewhat knowledgeable about the design of the Alto. It was clear to us that we should have these machines in our environment. I went to (PARC founder) George Pake and said, “Can you give us 100 Altos?” He said, “I can probably give you five or 10.” I said, “No, no, the whole place has to be supplied!” We went to DEC and they hemmed and hawed, then we went to IBM, and they said, “You don’t need a separate computer for each person,” and offered us some sort of a mini-computer.

With help unavailable from IBM, DEC or Xerox, Reddy launched a drive for development of CMU’s own “three-M” machine—a personal workstation with a megabyte of memory, a megapixel display and at least one million instructions per second of processing power.

NEWELL (1985): There’s a radical difference between computer science in the ’60s and computer science in the ’70s. It becomes much more project-oriented. CS in the ’60s is really quite unstructured … In the ’70s, the whole organization changes radically, because we were shaken up quite strongly by our sponsors. “Well,” they say, “we’ve been supporting A.I. for 10 years, what have you done for us lately?”

TRAUB : It was a good thing that we had started to diversify our funding, because DARPA’s new director didn’t care for A.I. Suddenly, my budget went from $1.8 million to $1.5 million. Wham! Well, we had an emergency plan in place. There was a threat to cut it to $1.2 million, but to my recollection that didn’t happen.

One non-governmental research sponsor was Pittsburgh’s Westinghouse Electric Corp., then a large manufacturing conglomerate with interests ranging from consumer products to factory automation. In 1979, Westinghouse executive Tom Murrin collaborated with Jordan and Reddy to create the Robotics Institute, with Reddy as its first director.

JORDAN : It was quite an accomplishment, and Raj Reddy was more or less the inspiration.

SIEWIOREK : Raj was like the Wild West—anything conceivable was possible. He could just go off and do anything. Have you ever heard of the “half-Raj” and the “full-Raj”? The half-Raj is when Raj says, “Dan, I’d like to talk to you,” and you know it’s going to be very interesting. When you get the full Raj, he puts his arm around you, and you’re going to be totally involved in a grand adventure.

JORDAN : We had to do a lot of recruiting of faculty. There was quite a lot of participation from CIT—electrical engineering, mechanical engineering, civil engineering—at one point, the Robotics Institute was kind of “claimed” by the College of Engineering. However, robotics shared its computing facilities with the Department of Computer Science. That was an incentive for the Robotics Institute to start hiring computer scientists; up until that point, all of their hires had been engineers. More and more of their faculty was coming from computer science, and more of their students also were from computer science.

SHAW : By then we were bursting at the seams. We were growing both the faculty and the student body at a pretty good clip.

In 1979, Traub left CMU to start a new Computer Science Department at Columbia. Office and laboratory space, scattered in Wean and Doherty halls, emerged as a serious concern for Traub’s successor, A. Nico Habermann. By 1982, the Computer Science Department included more than 30 faculty members and 100 graduate students. “There are 16 faculty members who share offices,” Habermann wrote in one memo to CMU President Dick Cyert. “None of the offices shared by them are suitable for double occupancy … the graduate student offices are overcrowded so severely that, in some cases, there is no room for a desk per student.” Habermann told Cyert he was “at the breaking point.”

REDDY : I wasn’t privy to some of the discussions between Nico and the dean of science. There may have been some heated words used. Nico threatened to resign several times during his tenure as department head.

SIEWIOREK : Nico said the Computer Science Department was sort of like a torus, with a cone on top. The surface area of the torus was allowing the faculty to collaborate with other faculty members. There’s a very narrow neck, which is the department head, and then the rest of the university. Nico said the department head’s job was to keep the administration off of the backs of the faculty.

The lack of physical space didn’t prevent the university and the Computer Science Department from establishing another new research frontier: Development of a high-speed computer network that would reach virtually every room on campus, along with a GUI-based computing environment, and providing networked PCs or workstations for 7,000 students, faculty members and employees.

REDDY : I was sitting at the airport with Dick Cyert, and I said, “Look, the Computer Science Department is going forward with personal workstations, you really ought to think about making the whole university computer-centric.” Allen Newell used to call it “greening up the campus with computer science.” So Cyert asked Newell to head up a committee about that idea, and it turned into the Andrew Project. We went back to IBM and DEC and asked, “Are you willing to become a partner in a campus-wide computing project?” IBM made an offer, because they realized they were in danger of falling behind.

MORRIS : I was working at Xerox PARC, and they offered me a nine-month sabbatical anywhere I wanted to go. We looked around the world and my wife convinced me that we should come back to Pittsburgh. I’d been at Xerox for 10 years, we’d developed all of this personal computer stuff—I was enflamed by the potential of it—and Xerox was going to abandon the products we’d developed. It was a sensible business decision for Xerox, but at that point, many of us were bailing out of PARC. I said, “OK, I’ll take this job at CMU and try to create a system in the image of what we were doing at PARC.”

REDDY : People like Jim Morris, Al Spector and Satya (Mahadev Satyanarayanan, CS’79,’83) ended up doing a lot of strong technical work on the Andrew network and the Andrew File System. One of the great things that came out of that—at the time I thought it was rather extravagant—was the idea of a centralized or cloud-based system for files. Because there was this high-bandwidth connection, anything you touched automatically got downloaded. Many of the ideas that came out of Andrew have since become kind of a global solution, and now everyone uses them.

SIEWIOREK : Satya’s research continues to have an impact, and it stretches back to those Andrew File System days. The computing environment was fantastic. With Andrew, and then Wireless Andrew, our computing environment was the envy of other universities, and we were attracting world-class students.

‘Software wars’ and ‘theory guys’

In addition to robotics and AI, research at the Computer Science Department in the early 1980s centered on programming languages, hardware and architecture, as well as a field called “operations performance and analysis.”

MORRIS : At a certain point, a visiting committee came into Carnegie-Mellon and said, “You’re great in systems and artificial intelligence, but weak in theory.” So Nico went out and decided to recruit some great theory guys.

SIEWIOREK : Nico brought in Dana Scott, Dana brought in other people, and they put us on the theory map. Nico was a programming language guy, but he was also able to serve these growing, different constituencies.

DANA SCOTT (Hillman University Professor of Computer Science, Philosophy and Mathematical Logic, Emeritus): I was a professor at Oxford at the time, but the financial situation with the Thatcher government in the U.K. was very bad. Out of the blue came a letter from Nico Habermann, offering me a professorship at CMU. He said, “We are so well-provided with funds that you’ll never have to write a project proposal again.” Well, the very fall I came to Pittsburgh, Bob Kahn, one of the fathers of the ARPANet, came to CMU and said, “The good times are over.” And the rest of the time I was there, I was trying to think of ways to write project proposals.

DARPA still had an interest in computer science—but instead of funding general research, the agency was becoming application-driven, and was funding very targeted projects. One of those was a proposed “Software Engineering Institute,” which would study computer security and develop best practices in the design of operating systems.

JORDAN : Nico and I knew something big was about to happen. The proposal that we wrote said the Software Engineering Institute had to come to Carnegie-Mellon. There was competition. We did a lot of lobbying. Some people called it the “software war,” but we won. And the first director of the SEI was the lead author of the proposal—Nico Habermann.

SHAW : Nico recruited me to become the chief scientist for the SEI, so I spent most of my time there for four or five years. I grew an entirely new understanding of the engineering issues of real software production, and I think it was good for me, and for the other people who have established connections with SEI over the years.

MORRIS : Nico was greatly revered by virtually everyone in the department, and I liked him a lot. He was a great teacher, he did great research, and he was the first director of the Software Engineering Institute—he made great contributions to the university.

Becoming a misfit in MCS

Between 1982 and 1985, the amount of sponsored research in the Computer Science Department doubled, from $7.2 million to $15.3 million—more than the other four departments in the Mellon College of Science combined.

REDDY : Computer Science was the elephant in the room, because their budget was like 80 percent of the college budget. And that’s without the Robotics Institute, because it reported directly to the provost.

JORDAN : Yet when it came to budgeting, there were scare resources for the Computer Science Department, and Nico Habermann was very, very unhappy—and that is an understatement.

MORRIS : It was a politically fraught issue, because the Computer Science Department was exploding with research funding—something CMU had never seen before, really. It wasn’t fitting into the traditional department structure.

SCOTT : Computer Science was the tail wagging the dog, and the decisions that the Mellon College of Science was making administratively didn’t always match up with our needs. Computer science needed to have laboratories of a different kind than the so-called “wet sciences” do. Things also changed very, very quickly, so decisions had to be made very, very quickly, and the college structure was too sluggish.

SHAW : I sat on the Mellon College of Science council for a few years as the representative for Computer Science, and what was really clear was that we had a different set of issues. We didn’t have an undergraduate program, so the concerns that the other departments had about staffing courses, advising, admissions and so forth were not our concerns. Other departments were worried they weren’t getting enough graduate students—we were beating graduate students off with sticks. We were a misfit in MCS.

Feeling that CSD’s needs were inadequately represented in MCS, Habermann and Jordan in 1986 wrote a white paper proposing the creation of “a School of Computer Science.” MCS administrators and others across campus protested loudly.

MORRIS : University politics is a sibling rivalry on steroids. If you see another department about to become a college, you get angry. Creating a school of computer science wasn’t an intellectual vision shared by physicists, the faculty senate and the fine arts people.

JORDAN : Allen Newell really deserves a lot of the credit. Simon preferred to remain on the sidelines. He couldn’t care less whether computer science was a department or a school—he was already connected to the rest of the school, so why should he fight?

SIEWIOREK : Allen was a very careful, logical-thinking, great statesman, almost like a Benjamin Franklin. He dropped his research to make the spin-out happen of a School of Computer Science.

MORRIS : Ninety percent of the maneuvering was Allen Newell’s doing. Nico was in charge of running the place, but if Allen said we should do something, we did it, and that included Nico.

SIEWIOREK : When Allen talked, people listened. No matter how discouraged you got, when you talked to Allen, you were energized. He was a reluctant administrator. Taking the point position to get us separated was something I’m assuming he felt he had to do, but it would not have been something he aspired to do.

NEWELL (1991): I’ve never been interested in institutional growth … these were obligations. They were always completely secondary to the science … If you go after institutions, you don’t get any science done.

MORRIS : The guy who actually made it happen was Angel Jordan, who was the provost at the time. He put it across over the objections of many people.

JORDAN : I was fairly unpopular at the time. At one point, there was a petition circulated against me among prominent people at Carnegie-Mellon, including some of the trustees.

REDDY : There’s another important person at the time, Pat Crecine (IM’61, IA’63,’66), who was a senior vice president. Pat came from the College of Humanities and Social Sciences, but he was strongly computer-oriented.

JORDAN : Pat became the champion of the idea of a floating Department of Computer Science, which would report not particularly to one dean or another. Of course, he would also become the supervisor of it! He used the experience very effectively, because when he became president of Georgia Tech, he created the College of Computing, which was more or less a replica of what we were doing at Carnegie-Mellon.

Although unusual, the concept of a free-floating department wasn’t entirely without precedent at Carnegie Mellon, which dropped its hyphen in the mid-1980s. Statistics had started as a graduate program unaffiliated with any college before the formation of a Statistics Department within H&SS.

Separately, 1986 saw the creation of the Pittsburgh Supercomputing Center as a joint effort between CMU, the University of Pittsburgh and Westinghouse Electric Corp.

JORDAN : The experiment of the free-floating department was successful. I was happy, Nico was happy, and the rest is history.

REDDY : It took a year or two to decide on the structure of the college. Nico asked, “Do you mind if robotics is part of (SCS), rather than reporting directly to the provost?” I said, no. So the School of Computer Science became the Department of Computer Science, the Robotics Institute and the Center for Machine Translation.

SCS also incorporated the remaining researchers from the Information Technology Center, which had developed Andrew.

SIEWIOREK : There was some argument about how we should name the school, because there was confusion over the fact there was both a School of Computer Science and a Computer Science Department.

JORDAN : Pat Crecine suggested, “Why not call it the School of Computing?” Some other people said, “Why not the School of Informatics?” Newell resisted that. He said, “It should be called the School of Computer Science.”

SCS makes its debut

Although voicing some concerns, CMU’s Faculty Senate in the fall of 1988 assented to Cyert’s plan to elevate the Department of Computer Science to college status. On Dec. 13, 1988, Cyert told faculty and staff that Habermann had been appointed CMU’s first Dean of Computer Science, effective Dec. 1, and that the School of Computer Science would soon begin operations. SCS made its formal debut on Dec. 22, 1988, with a reception in the Wherrett Room of Skibo Hall, CMU’s student union. The official announcement of CMU’s new “graduate School of Computer Science” was made Jan. 3, 1989.

SCOTT : They should have had an undergraduate program much earlier. At the time the need wasn’t so recognized around the country, but it really was essential.

SHAW : There were two things in question—one was the level of university support, and the other one was, “is the field mature enough for an undergraduate program?”

For several years, undergraduates interested in computer science pursued an “applied math/CS” bachelor’s degree offered by the Mathematics Department. Shaw led CMU’s first effort to design an undergraduate curriculum solely in computer science. She and her colleagues were guided by the Carnegie Plan—guidelines established in 1938 under Carnegie Tech President Robert Doherty (A’40, E’48, H’50), outlining the principles of a sound professional education.

SHAW : The Carnegie Plan says, in substance, that an undergraduate education should include durable education in the ideas of the field. It should teach critical thinking … Yes, it should teach you some of the current skills, but to justify its place in the curriculum, any course needs to have durable intellectual content that will outlast a couple of changes in technology.

The undergraduate program started small, with seven CS majors admitted as sophomores during the 1989-90 academic year. Another 73 undergraduates were admitted in 1990–91. By 1995, there were 401 undergraduates in the School of Computer Science; in fall 2013, more than 600 undergraduates made up about 37 percent of student enrollment at SCS, along with more than 600 master’s degree students.

Along the way, the Center for Machine Translation became the Language Technologies Institute, and other new departments formed, including the Human-Computer Interaction Institute (1993), the Institute for Software Research (1999), the Machine Learning Department (2006) and the Ray and Stephanie Lane Center for Computational Biology (2009).

What’s next?

TRAUB : CMU is like China, in that when you visit China, if you come back 10 years later, it's an entirely new country, and they have completely reinvented themselves. CMU is the same way. Every time I come back here, I’m thrilled by what’s new. (My last visit) I was stunned by the Gates-Hillman complex … I sometimes ask myself, “Would (SCS) even be here if we had not succeeded back in the 1970s?” Because all it would have taken was one or two more people leaving, and we would have gone sub-critical, and that would have been the end of CMU as a power in computer science.

SIEWIOREK : I think it would be nice to have some big projects again. Where’s the next “Andrew” vision? Where’s the next “Wireless Andrew” vision? Maybe things are so diffuse now that it’s not possible to come up with something like that to service all of campus. Those big, cohesive projects—there don’t seem to be many of them. Red Whittaker (E’75,’79) does some of that with his projects, and ideas such as model checking have certainly attracted a lot of interest. Maybe they’re there, and it just takes longer for them to gain public recognition.

REDDY : I’ve been asking myself, what can we do that’s unique and could actually transform the world 10 or 20 years from now? It could be software and algorithms. It may be things such as robotics, and learning, and language. But it’s more narrow than all of computer science.

SHAW : We have a couple of challenges. One is to do more research that directly connects with the things people actually do with their computers. HCII runs in that direction. We have people working on usable security, which addresses a particular slice of it. But I don’t think we’ve made much of a dent in the long-standing problem of people being unable to manage their own personal computers. We still have epidemics of infected machines, for instance, that no one has made backups for, and we’re not doing a lot to help individuals control their own computing. Electronic medical records are another big opportunity that we are tantalizingly close to being engaged in. One of the big impediments there is data interchange, and heaven knows we’ve got people who can deal with that.

SCOTT : There are two things that seem important to me: First, the existence of the cloud and having distributed facilities in computing—how to manage them, how to make sure they stay secure and operational—there are a hundred interesting questions there about distributing resources and proper management of information retrieval and programming. Second, how to properly integrate computer resources into teaching is far from being solved. We’re not really ready to produce well-designed courses, with people interacting remotely on computers, and integrating those into an academic degree, and it’s going to take quite a while to iron that out.

SIEWIOREK : The Pittsburgh Science of Learning Center was way out in front in that field, but then these sort of shallow investigations came along—Massive Open Online Courses—which are getting all of the press. The Simon Initiative is an opportunity for us, because it has two aspects—the deeper science underneath, and a higher-level vision.

REDDY : In the old days, a few people used to know a lot of things. Aristotle in the time of the ancient Greeks, for instance, could read and write when most people were ignorant of those skills. The same thing is happening in computer science. For the first 30 or 40 years, there was a small group of aristocracy in computer science, and we were at the top of the pyramid. When hardware was the king of computer science, we were the place to go. The democratization of computing means that everyone can have that kind of computing today at a fraction of the cost. The question is, what can we do that will still maintain our edge?

For More Information:

Jason Togyer | 412-268-8721 | jt3y@cs.cmu.edu

You must have JavaScript enabled to use this form.