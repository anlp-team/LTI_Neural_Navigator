{"file_path": "/Users/sz904/Desktop/11711/LTI_Neural_Navigator/data/2024-02-26/chunk_paper_txt/Jamie_Callan_CSurF:_Sparse_Lexical_Retrieval_through_Contextualized_Surface_Forms_chunk_3.txt", "num_qa_pairs": 10, "qa_list": [{"question": " What framework is commonly used to score the (query, document) pair in retriever systems?", "answer": " max-sum framework", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What does S(q, d) represent in the scoring equation for retriever systems?", "answer": " Score for query term qi and document term dj", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What does term matching criteria M(qi, dj) indicate?", "answer": " Whether qi and dj are matched", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " In exact-match systems, what is the value of M(qi, dj)?", "answer": " I(qi = dj)", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What are the drawbacks of exact-match systems in terms of matching signals?", "answer": " Sparse matching signals and mismatch in query and document vocabulary", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What is the implication of using all-to-all soft-match systems like ColBERT?", "answer": " Maximum model capacity but at a high computation and storage cost", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What is the goal of CSurF in sparse retrieval?", "answer": " To jointly control the sparsity of matching signals M and the precision of the scoring function S", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " How does CSurF generate contextualized surface forms?", "answer": " By pairing generated surface forms with a term in the original text as their context source", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What do vqi and Eqi represent in the projection process for query term qi?", "answer": " Dense representation denoting term semantics and sparse |V|-dim vector denoting expansion weights", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}, {"question": " What does CSurF perform over the entire query or document sequence to select sequence importance weight for a surface form t?", "answer": " Max-pooling over all expansion weights Eq[t]", "ref_chunk": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}], "doc_text": "retriever scores the (q, d) pair by accumulating individual term match scores, commonly via the \"max-sum\" framework: \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (q, d) = \u2211\ufe01 \ud835\udc5e\ud835\udc56 \u2208q max \ud835\udc51 \ud835\udc57 \u2208d M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 )S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) For query term \ud835\udc5e\ud835\udc56 and document term \ud835\udc51 \ud835\udc57 , S(\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is a term scor- ing operation, such as term weight multiplication or vector simi- larity calculation. M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) is the term matching criteria, indicat- ing whether \ud835\udc5e\ud835\udc56 and \ud835\udc51 \ud835\udc57 are matched. The strictness of the selection mask M directly determines the capacity and efficiency of the lexical retriever. As shown in Figure 1b, in exact-match systems, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) = I(\ud835\udc5e\ud835\udc56 = \ud835\udc51 \ud835\udc57 ) and only terms with identical form are matched. This results in sparse matching signals but suffers from the mismatch in query and document vocabulary. On the other hand, for all-to-all soft-match systems such as ColBERT, M (\ud835\udc5e\ud835\udc56, \ud835\udc51 \ud835\udc57 ) \u2261 1 and all possible term pairs are matched regardless of surface form. This leads to maximum model capacity but at the cost of extremely high computation and storage cost. 3.2 Contextualized Surface Form Generation CSurF aims to jointly control the sparsity of matching signals M and the precision of the scoring function S through sparse retrieval of contextualized surface forms (CSF). For each input sequence (query or document), it generates a bag-of-CSFs by (1) generating candidate lexical surface forms for the sequence, and (2) pairing each generated surface form with a term in the original text as its context source. CSurF follows Formal et al. [11] and generates candidate lexical surface forms from the entire vocabulary space. It first encodes each input sequence (query or document) with a language model (LM) backbone and separately projects the LM output of each query and document term to two components: a dense representation denoting term semantics, and a sparse |\ud835\udc49 |-dim vector denoting expansion weights for each token in the vocabulary. v\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) E\ud835\udc5e\ud835\udc56 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56)) v\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc63 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) E\ud835\udc51 \ud835\udc57 = \ud835\udf19\ud835\udc52 (\ud835\udc3f\ud835\udc40 (\ud835\udc51, \ud835\udc57)) For query term \ud835\udc5e\ud835\udc56 , \ud835\udc3f\ud835\udc40 (\ud835\udc5e, \ud835\udc56) denotes its LM output representation. \ud835\udf19\ud835\udc63 and \ud835\udf19\ud835\udc52 denote the semantic and expansion projection layers, which we discuss in Section 3.5. v\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc51\ud835\udc5f\ud835\udc52\ud835\udc5d | denotes the con- textual semantics representation for \ud835\udc5e\ud835\udc56 . E\ud835\udc5e\ud835\udc56 \u2208 R|\ud835\udc49 | represents non-negative expansion weights from \ud835\udc5e\ud835\udc56 to each token in the vocab- ulary \ud835\udc49 . For instance, E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] represents the expansion weight from original term \ud835\udc5e\ud835\udc56 to surface form \ud835\udc61 \u2208 \ud835\udc49 , with higher weight value denoting higher likelihood of expansion. Query and document term representations are processed through the same projection layers. ICTIR \u201923, July 23, 2023, Taipei, Taiwan Over the whole query or document sequence, for surface form \ud835\udc61, CSurF performs max-pooling over all expansion weights E\ud835\udc5e [\ud835\udc61 ] to se- lect its sequence importance weight. Additionally, CSurF grounds the surface form \ud835\udc61 to the original text by tracking the projection source of the selected expansion weight. \ud835\udc64\ud835\udc5e \ud835\udc61 = max\ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc64\ud835\udc51 \ud835\udc60\ud835\udc5e \ud835\udc61 = arg max E\ud835\udc5e\ud835\udc56 [\ud835\udc61 ] \ud835\udc5e\ud835\udc56 \u2208\ud835\udc5e \ud835\udc60\ud835\udc51 \ud835\udc61 = arg max \ud835\udc61 = max \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] E\ud835\udc51 \ud835\udc57 [\ud835\udc61 ] \ud835\udc51 \ud835\udc57 \u2208\ud835\udc51 \ud835\udc61 and \ud835\udc60\ud835\udc5e Given a query \ud835\udc5e and surface form \ud835\udc61, \ud835\udc64\ud835\udc5e \ud835\udc61 respectively denote the final expansion weight and its projection source, i.e. \ud835\udc38\ud835\udc60\ud835\udc61 ,\ud835\udc61 = \ud835\udc64\ud835\udc61 . The grounding step crucially links the lexical surface form space and the original text semantic space, enabling CSurF to pair each surface form with a context source and construct CSFs. We denote a contextualized surface form as \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34), where \ud835\udc61\ud835\udc34 \u2208 \ud835\udc49 is its lexical surface form with a scalar importance weight \ud835\udc64\ud835\udc61\ud835\udc34 , and \ud835\udc60\ud835\udc34 \u2208 \ud835\udc5e or \ud835\udc60\ud835\udc34 \u2208 \ud835\udc51 is its context source with semantic representation v\ud835\udc60\ud835\udc34 . This enables CSurF to combine the advantage of lexical form matching and semantic-based scoring, which we discuss in the following sections. For each query and document, the expansion-based \u201cbag-of-CSFs\u201d E is the set of all CSFs with positive surface form weights. \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc5e \ud835\udc61 ) | \ud835\udc61 \u2208 \ud835\udc49 , \ud835\udc64\ud835\udc51 Additionally, we construct CSFs for all original query and docu- ment terms to preserve the lexical form information of the original text. We directly use the term\u2019s self-projection weight \ud835\udc38\ud835\udc5e \ud835\udc5e\ud835\udc56,\ud835\udc5e\ud835\udc56 or \ud835\udc38\ud835\udc51 \ud835\udc51 \ud835\udc57 ,\ud835\udc51 \ud835\udc57 E\ud835\udc5e = {(\ud835\udc61, \ud835\udc60\ud835\udc5e E\ud835\udc51 = {(\ud835\udc61, \ud835\udc60\ud835\udc51 \ud835\udc61 > 0} \ud835\udc61 > 0} as its lexical form weight. O\ud835\udc5e = {(\ud835\udc5e\ud835\udc56, \ud835\udc5e\ud835\udc56 ) | \ud835\udc5e\ud835\udc56 \u2208 q, \ud835\udc38\ud835\udc5e O\ud835\udc51 = {(\ud835\udc51 \ud835\udc57 , \ud835\udc51 \ud835\udc57 ) | \ud835\udc51 \ud835\udc57 \u2208 d, \ud835\udc38\ud835\udc51 \ud835\udc5e\ud835\udc56 [\ud835\udc5e\ud835\udc56 ] \ud835\udc51 \ud835\udc57 [\ud835\udc51 \ud835\udc57 ] > 0} > 0} where O denotes the original text-based CSFs. The final bag-of- CSFs C for each query and document is the union of expansion- based and original text-based CSFs. C\ud835\udc5e = O\ud835\udc5e \u222a E\ud835\udc5e C\ud835\udc51 = O\ud835\udc51 \u222a E\ud835\udc51 3.3 Indexing and Retrieval CSurF scores a query-document pair by sparse retrieval through their bag-of-CSFs C\ud835\udc5e and C\ud835\udc51 . Specifically, it strictly matches CSF pairs through lexical exact match of their surface forms, and scores a matched CSF pair through vector similarity. For CSFs \ud835\udc34 = (\ud835\udc61\ud835\udc34, \ud835\udc60\ud835\udc34) \u2208 C\ud835\udc5e and \ud835\udc35 = (\ud835\udc61\ud835\udc35, \ud835\udc60\ud835\udc35) \u2208 C\ud835\udc51 , M (\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35) S(\ud835\udc34, \ud835\udc35) = \ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) \ud835\udc46\ud835\udc50\ud835\udc5c\ud835\udc5f\ud835\udc52 (\ud835\udc34, \ud835\udc35) = M (\ud835\udc34, \ud835\udc35) S(\ud835\udc34, \ud835\udc35) = I(\ud835\udc61\ud835\udc34 = \ud835\udc61\ud835\udc35)\ud835\udc64\ud835\udc61\ud835\udc34\ud835\udc64\ud835\udc61\ud835\udc35 f (v\ud835\udc60\ud835\udc34, v\ud835\udc60\ud835\udc35 ) Here, f () denotes a similarity function such as dot-product or cosine similarity. CSurF jointly utilizes the efficiency of lexical form match and the accuracy of contextualized term scoring. The exact- match precondition M limits the density of actual CSF matches, which enables the model to efficiently index document CSFs in Zhen Fan, Luyu Gao, & Jamie Callan inverted lists via their lexical surface forms. The"}